# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: cert-manager.io/v1alpha3
kind: Certificate
metadata:
  name: apigee-udca-nandanks-serverless-prod1
  namespace: apigee
spec:
  commonName: apigee-udca-nandanks-serverless-prod1
  isCA: true
  dnsNames:
  - apigee-udca-nandanks-serverless-prod1
  - apigee-udca-nandanks-serverless-prod1.apigee
  - apigee-udca-nandanks-serverless-prod1.apigee.svc.cluster.local
  duration: 87600h0m0s
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: nandanks-serverless-ca-issuer
  secretName: apigee-udca-nandanks-serverless-prod1-tls
  usages:
  - digital signature
  - key encipherment
  - client auth
  - server auth
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: apigee-udca
    env: prod1
    org: nandanks-serverless
    revision: v130rc8
    com.apigee.apigeedeployment: apigee-udca-nandanks-serverless-prod1
  name: apigee-udca-nandanks-serverless-prod1
  namespace: apigee
spec:
  ports:
  - name: tcp-20001
    port: 20001
  selector:
    com.apigee.apigeedeployment: apigee-udca-nandanks-serverless-prod1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apigee-udca
    env: prod1
    org: nandanks-serverless
    revision: v130rc8
    com.apigee.apigeedeployment: apigee-udca-nandanks-serverless-prod1
  name: apigee-udca-nandanks-serverless-prod1
  namespace: apigee
spec:
  replicas: 1
  selector:
    matchLabels:
      com.apigee.apigeedeployment: apigee-udca-nandanks-serverless-prod1
  template:
    metadata:
      annotations:
        prometheus.io/path: /v1/server/metrics
        prometheus.io/port: "7070"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
      labels:
        app: apigee-udca
        env: prod1
        org: nandanks-serverless
        revision: v130rc8
        com.apigee.apigeedeployment: apigee-udca-nandanks-serverless-prod1
      name: apigee-udca-nandanks-serverless-prod1
    spec:
      automountServiceAccountToken: false
      containers:
      - command:
        - /app/hybrid-authn-authz
        - --apigee_endpoint=https://apigee.googleapis.com
        - --main_container_port=7070
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/secret/client_secret.json
        image: gcr.io/nandanks-serverless/apigee-authn-authz:1.3.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /healthz
            port: 7091
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        name: apigee-authz
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /healthz
            port: 7091
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          privileged: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 100
        volumeMounts:
        - mountPath: /etc/secret
          name: svc-account-volume
          readOnly: true
      - image: gcr.io/nandanks-serverless/apigee-stackdriver-logging-agent:1.6.8
        imagePullPolicy: IfNotPresent
        name: apigee-fluentd
        ports:
        - containerPort: 20001
          name: tcp-20001
        resources:
          requests:
            cpu: 250m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/tls
          name: tls-volume
          readOnly: true
        - mountPath: /opt/apigee/data
          name: data-collector-storage-volume
        - mountPath: /etc/google-fluentd/google-fluentd.conf
          name: fluentd-config-volume
          readOnly: true
          subPath: fluentd-main.conf
        - mountPath: /etc/google-fluentd/config.d/fluentd-listener.conf
          name: fluentd-config-volume
          readOnly: true
          subPath: fluentd-listener.conf
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: APIGEE_DPCOLOR
          value: v130rc8
        - name: APIGEE_ORG
          value: nandanks-serverless
        - name: APIGEE_ENV
          value: prod1
        - name: DATALOCATION_ENDPOINT
          value: https://apigee.googleapis.com
        - name: API_DATA_DIR
          value: /opt/apigee/data/api
        - name: TRACE_DATA_DIR
          value: /opt/apigee/data/trace
        - name: EVENT_DATA_DIR
          value: /opt/apigee/data/event
        - name: POLLING_INTERVAL_SECONDS
          value: "1"
        - name: PORT
          value: "7070"
        image: gcr.io/nandanks-serverless/apigee-udca:1.3.0
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - sh
              - -c
              - while "(nc -W 2 localhost 7091)" &> /dev/null; do sleep 1; echo "waiting
                for authz sidecar to be healthy!";done;
          preStop:
            exec:
              command:
              - /bin/sh
              - -s
              - -c
              - while !(nc -W 2 localhost 20001) &> /dev/null; do sleep 1; echo "waiting
                for fluentd sidecar to be terminated!";done;PID=$(pidof java) && kill
                $PID && while ps -p $PID > /dev/null; do sleep 1; done
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /v1/probes/live
            port: 7070
            scheme: HTTPS
          initialDelaySeconds: 15
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        name: apigee-udca
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /opt/apigee/ssl
          name: tls-volume
          readOnly: true
        - mountPath: /opt/apigee/data
          name: data-collector-storage-volume
        - mountPath: /etc/secret
          name: svc-account-volume
          readOnly: true
      initContainers:
      - command:
        - /bin/sh
        - -c
        - until [[ -s /etc/tls/ca.crt && -s /etc/tls/tls.crt && -s /etc/tls/tls.key
          ]]; do sleep 1; echo "waiting for TLS files";done
        image: gcr.io/nandanks-serverless/apigee-udca:1.3.0
        imagePullPolicy: IfNotPresent
        name: apigee-tls-readiness
        volumeMounts:
        - mountPath: /etc/tls
          name: tls-volume
          readOnly: true
      restartPolicy: Always
      securityContext:
        runAsGroup: 998
        runAsNonRoot: true
        runAsUser: 999
      terminationGracePeriodSeconds: 300
      volumes:
      - name: tls-volume
        secret:
          secretName: apigee-udca-nandanks-serverless-prod1-tls
      - name: data-collector-storage-volume
      - configMap:
          name: apigee-udca-nandanks-serverless-prod1-config
        name: fluentd-config-volume
      - name: svc-account-volume
        secret:
          secretName: apigee-udca-nandanks-serverless-prod1-sa
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: apigee-udca-nandanks-serverless-prod1-config
  namespace: apigee
data:
  fluentd-listener.conf: |-  
    <source>
        @type forward
      port 20001
      bind 0.0.0.0
      <transport tls>
      ca_path /etc/tls/ca.crt
      cert_path /etc/tls/tls.crt
      private_key_path /etc/tls/tls.key
      client_cert_auth true
      </transport>
    </source>

    <match api.**>
      @type file
      path /opt/apigee/data/api/${tag}
      <buffer tag,time>
      timekey 30
      timekey_wait 1s
      flush_at_shutdown true
      @type file
      path /opt/apigee/data/tmpbuf/api
      </buffer>
      add_path_suffix false
      append true
      format json
    </match>
  fluentd-main.conf: |-
    @include config.d/*.conf
    <match fluent.**>
      @type null
    </match>
